@startuml Employee Management - Activity Diagram

!theme plain
skinparam backgroundColor #F8F9FA
skinparam activityBackgroundColor #FFFFFF
skinparam activityBorderColor #6C757D
skinparam activityStartColor #28A745
skinparam activityEndColor #DC3545
skinparam activityDiamondBackgroundColor #FFC107
skinparam activityDiamondBorderColor #FD7E14

title Employee Management (Manager Only) Activity Diagram

|Manager|
start
:Login as Manager;
:Access Manager Dashboard;

|System|
:Check Employee Role;
if (Role == "Manager"?) then (no)
  :Display "Access Denied" Message;
  :Redirect to Employee Dashboard;
  stop
else (yes)
  :Show Employee Management Option;
endif

|Manager|
:Click "Manage Employees" Button;

|System|
:Load ViewEmployeeActivity;
:Display Employee List from Database;
:Show Search and Management Buttons;

|Manager|
if (Action Choice?) then (View/Search Employees)
  :Enter Search Keyword (Optional);
  :Select Search Criteria (By ID/By Name);
  :Click Search Button;
  |System|
  :Execute Employee.searchEmployee() method;
  :Filter and Display Results;
  |Manager|
  :Review Employee Information;

elsif (Add New Employee)
  :Click "Add" Button;
  |System|
  :Open AddEmployeeActivity Form;
  |Manager|
  :Enter Employee ID;
  :Enter Password;
  :Enter Employee Name;
  :Enter Phone Number;
  :Select Role (Manager/General);
  :Enter Salary;
  :Click "Add" Button;
  |System|
  :Validate Employee Data;
  if (Data Valid?) then (no)
    :Display Validation Error;
    |Manager|
    :Correct Input Data;
  else (yes)
    :Check Employee ID Uniqueness;
    if (ID Already Exists?) then (yes)
      :Display "Employee ID Exists" Error;
      |Manager|
      :Enter Different Employee ID;
    else (no)
      :Create New Employee Object;
      :Call employee.createEmployee() method;
      :Insert into Database;
      :Refresh Employee List;
      :Display Success Message;
    endif
  endif

elsif (Edit Employee Details)
  :Click on Employee Row in Table;
  |System|
  :Open ManageEmployee Form;
  :Load Current Employee Data;
  |Manager|
  :Modify Employee Information;
  :Update Name, Phone, Role, or Salary;
  :Click "Update" Button;
  |System|
  :Validate Changes;
  if (Data Valid?) then (no)
    :Display Validation Error;
  else (yes)
    :Call employee.updateEmployee() method;
    :Update Database Record;
    :Refresh Employee List;
    :Display Success Message;
  endif

else (Delete Employee)
  :Select Employee to Delete;
  |System|
  :Show Confirmation Dialog;
  :Display Warning about Data Loss;
  |Manager|
  if (Confirm Deletion?) then (yes)
    |System|
    :Call employee.deleteEmployee() method;
    :Remove from Database;
    :Update Related Records;
    :Refresh Employee List;
    :Display Success Message;
  else (no)
    :Cancel Operation;
  endif
endif

:Continue Employee Management;
if (More Actions Needed?) then (yes)
  :Choose Another Action;
else (no)
  :Return to Manager Dashboard;
  stop
endif

note right of "Check Employee Role"
  Only users with role "Manager" 
  can access employee management.
  Regular employees see limited dashboard.
end note

note right of "Validate Employee Data"
  Validation includes:
  - Employee ID format (e001, e002, etc.)
  - Password not empty
  - Name not empty
  - Phone number format
  - Salary > 0
end note

note right of "Update Related Records"
  When deleting employee:
  - Remove from login table
  - Update any related transactions
  - Maintain data integrity
end note

@enduml
