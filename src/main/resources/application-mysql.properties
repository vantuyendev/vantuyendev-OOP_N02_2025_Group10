## Profile: mysql (Aiven MySQL)
# Activate with: SPRING_PROFILES_ACTIVE=mysql

# ---- DataSource ----
# Values pulled from environment variables; supply them when starting the app.
# Fallbacks are placeholders so startup fails fast if you forget to export them.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:INVALID_HOST}:${MYSQL_PORT:3306}/${MYSQL_DB:INVALID_DB}?sslMode=${MYSQL_SSL_MODE:REQUIRED}&serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=${MYSQL_USER:INVALID_USER}
spring.datasource.password=${MYSQL_PASSWORD:INVALID_PASSWORD}

# If Aiven gives you a CA cert and you want full chain verification:
#   export MYSQL_SSL_MODE=VERIFY_CA
#   and append to the URL: &sslCa=/absolute/path/to/aiven-ca.pem
# (MySQL Connector/J expects a filesystem path, not a classpath resource.)

# ---- JPA / Hibernate ----
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.jdbc.time_zone=UTC

# ---- Init & Console ----
# Avoid running dev bootstrap SQL against remote DB
spring.sql.init.mode=never
spring.h2.console.enabled=false

# ---- Logging ----
logging.level.org.hibernate.SQL=INFO
logging.level.org.hibernate.type.descriptor.sql=INFO

# ---- Server ----
# Default port for Aiven MySQL production mode
server.port=8080
